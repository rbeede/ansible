#!/usr/bin/env bash

# Need this for later
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"


if [ -z "$1" ]; then
	echo "Missing ProjectName, please provide as argument" 1>&2
	# exit kills current script or terminal, return keeps terminal
	exit 254
fi

set -o xtrace


# Don't want previous tests data leaking
# history -c doesn't work because bash scripts disable history
rm ~/.bash_history
# The original calling session will still have its own history, but we get a clean slate for this script shell history


export "ProjectName=$1"
# No trailing / please
export WORKDIR=`realpath --canonicalize-existing ~/Documents`



# Record all of our commands from this point forward
#-----------
# If the  script  command is not running then run it now by replacing the current process with it
[ -z "$TYPESCRIPT" ] && TYPESCRIPT=1 exec /usr/bin/script --append --flush --command "TYPESCRIPT=1  $0 \"$@\""	"$WORKDIR/$ProjectName.script"


echo Script is now recording in "$WORKDIR/$ProjectName.script"
echo


# Do not do this before since $0 may be a relative path we need
cd $WORKDIR



# colored prompt to remind us we are inside the script recorder
export 'PS1=\e[0;35m\u\e[m@\h: \e[4;37m\D{%F %T%z}\e[m \e[00;32m\w\e[0m\n\$ '

date; date --utc

ip address show

curl http://icanhazip.com


nohup /Software/BurpSuitePro/BurpSuitePro "--project-file=$WORKDIR/$ProjectName.burp" --config-file=/Software/BurpSuitePro/burp-custom-project-settings.json --user-config-file=/Software/BurpSuitePro/burp-custom-user-settings.json --unpause-spider-and-scanner  1>/dev/null 2>/dev/null  &

echo Waiting for Burp Suite to be ready
while ! curl --output $WORKDIR/burp-ca.der http://localhost:8080/cert 2>/dev/null; do  sleep 1.50; done
openssl x509 -inform der -in $WORKDIR/burp-ca.der -out $WORKDIR/burp-ca.pem

# Because there is not a standard various client softwares treat uppercase and lowercase differently
# So try to handle all possible cases
export https_proxy=http://localhost:8080
export http_proxy=$https_proxy
export all_proxy=$https_proxy
export HTTPS_PROXY=$https_proxy
export HTTP_PROXY=$https_proxy
export ALL_PROXY=$https_proxy
# ALL_PROXY is required by Firefox 90+ to capture wss:// URLs

# You will want to append to no_proxy in other scripts instead of resetting it

# Install Burp CA into Firefox
for certdb in `find ~/.mozilla/ -name 'cert*.db'`; do
	certutil -d `dirname $certdb`  -A -n "PortSwigger CA" -t "TC" -i $WORKDIR/burp-ca.pem
	
	certutil -L -d `dirname $certdb`
done

nohup firefox about:robots  1>/dev/null 2>/dev/null  &


gcloud config set core/custom_ca_certs_file $WORKDIR/burp-ca.pem
gcloud info
gcloud config list


which aws

aws --version
aws configure list
aws configure list-profiles

source $SCRIPT_DIR/setup-aws-cli.bash


ps -ef

pwd
ls -lah

# This provides our interactive recorded session keeping our PS1 and other customized settings
PROMPT_COMMAND='PS1="'$PS1'";unset PROMPT_COMMAND' bash
